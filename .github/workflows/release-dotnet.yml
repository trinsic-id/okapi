name: Release .NET SDK

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: 'Version to build'
        required: true
        default: ''
  # release:
  #   types: [published]
  workflow_run:
    workflows: ["Release Platform Libraries"]
    branches: ["main", "v?.*"]
    types:
      - completed

jobs:
  package_nuget:
    name: Package Nuget
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: "true"
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Generate Package Version
        run: |
          $json = Invoke-WebRequest 'https://api.github.com/repos/trinsic-id/okapi/releases/latest' `
            -Headers @{ "Authorization" = "Token $env:API_GITHUB_TOKEN"} | ConvertFrom-Json
          $version = $json.tag_name.Trim("v")
          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}

      - name: Create Nuget package
        run: |
          dotnet workload install ios
          dotnet restore
          dotnet build -c Release
          dotnet pack -p:SkipNativeLibsCopy=true -p:Configuration=Release -p:PackageVersion=$env:PACKAGE_VERSION
        shell: pwsh
        working-directory: ./dotnet/Library/Okapi

      - name: Upload nuget artifact
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: |
            ./dotnet/Library/Okapi/bin/Release/*.nupkg
            ./dotnet/Library/Okapi/bin/Release/*.snupkg

  publish_nuget:
    name: Publish Nuget
    needs: [package_nuget]
    environment:
      name: nuget.org
    runs-on: windows-latest
    steps:
      - name: Download workflow artifact
        uses: actions/download-artifact@v2
        with:
          name: nuget
      - name: Push packages to Nuget
        run: |
          foreach ($item in get-childitem ./ -recurse | select-object FullName | where { $_.FullName.EndsWith("nupkg") })
          {
            nuget push $item.FullName -ApiKey "${{ secrets.NUGET_API_KEY }}" -Source https://api.nuget.org/v3/index.json -SkipDuplicate
          }
        shell: pwsh
