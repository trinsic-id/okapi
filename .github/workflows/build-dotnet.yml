name: Build .NET SDK

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "dotnet/**"
      - "proto/**"
      - ".github/workflows/*dotnet*"
  push:
    branches:
      - main

jobs:
  code_cover_dotnet_sdk:
    name: Dotnet SDK Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - name: Test coverage
        run: ./Test.ps1
        working-directory: ./dotnet
        shell: pwsh
      - name: Comment report
        if: ( ${{ matrix.os }} == 'ubuntu-latest' )
        uses: 5monkeys/cobertura-action@master
        with:
          path: dotnet/Tests/Okapi.Tests/TestResults/coverage.cobertura.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 75
          show_class_names: true
          fail_below_threshold: false

  package_nuget:
    name: Package Nuget
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: "true"
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Generate Package Version
        run: |
          $packageVersion = node -p -e "require('./package.json').version"
          $manualVersion = "${{ github.event.release.tag_name }}"
          $version = if ($manualVersion) { $manualVersion } else { $packageVersion }
          $version = $version.TrimStart("v")

          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh

      - name: Create Nuget package
        run: |
          msbuild -target:restore,pack -property:SkipNativeLibsCopy=true -property:Configuration=Release -property:PackageVersion=$env:PACKAGE_VERSION
        shell: pwsh
        working-directory: ./dotnet/Library/Okapi

      - name: Upload nuget artifact
        uses: actions/upload-artifact@v2
        with:
          name: package-nuget
          path: |
            ./dotnet/Library/Okapi/bin/Release/*.nupkg
            ./dotnet/Library/Okapi/bin/Release/*.snupkg
