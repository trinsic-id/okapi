name: Build Golang SDK

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
  push:
    branches:
      - main

jobs:
  test_go:
    name: Test Go code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux
          - os: windows-latest
            artifact_name: windows-gnu
          - os: macos-latest
            artifact_name: macos
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Display Golang version
        run: go version
      - name: Add $GOPATH/bin to $PATH
        run: |
          mkdir -p $(go env GOPATH)/bin/
          echo "::add-path::$(go env GOPATH)/bin"
        env:
          GOPATH: "${{ github.workspace }}/go"
      - name: Build, Test, Pack
        run: |
          ./devops/BuildGolang.ps1 -GitTag ${{ github.ref }} -TestOutput "test_output_${{ matrix.os }}.xml" -ArtifactName "${{ matrix.artifact_name }}"
        shell: pwsh
        env:
          LD_LIBRARY_PATH: "${{ github.workspace }}/go/okapi"
          DYLD_LIBRARY_PATH: "${{ github.workspace }}/go/okapi"
          GOPATH: "${{ github.workspace }}/go"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: ./go/okapi/test_output*.xml
          fail_on_failure: true
