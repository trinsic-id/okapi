name: Build Golang SDK

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
  push:
    branches:
      - main

jobs:
  test_go:
    name: Test Go code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            static_lib_file: libokapi.a
            dynamic_lib_file: libokapi.so
            artifact_name: linux
            go-version: '1.16'
          - os: windows-latest
            static_lib_file: libokapi.dll.a
            dynamic_lib_file: okapi.dll
            artifact_name: windows-gnu
            go-version: '1.16'
          - os: macos-latest
            static_lib_file: libokapi.a
            dynamic_lib_file: libokapi.dylib
            artifact_name: macos
            go-version: '1.16'
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Golang version
        run: go version
      - name: Build, Test, Pack
        run: ./devops/BuildGolang.ps1 -GitTag ${{ github.ref }}
        shell: pwsh
        env:
          LD_LIBRARY_PATH: "$GITHUB_WORKSPACE/go/okapi"
      - name: Publish Test Report ${{ matrix.os }}
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: ./go/okapi/test_output.xml
