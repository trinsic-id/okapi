name: Golang

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"
  push:
    branches:
      - main
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"

jobs:
  build-and-test-golang:
    name: Build, Test
    runs-on: ${{ matrix.os-artifact[0] }}
    strategy:
      fail-fast: false
      matrix:
        os-artifact: [ [ubuntu-latest, linux], [windows-latest, windows-gnu], [macos-latest, macos] ]
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.21.1
        with:
          workflow: "build-libs.yml"
          path: ./libs/${{ matrix.os-artifact[1] }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ matrix.os-artifact[1] }}
      - name: Set up Go (default)
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build and Test Golang
        run: |
          go version
          python ../../devops/build_sdks.py --language=golang
          go build
          go get .out
          go test -v -race -covermode atomic -coverprofile coverage.out
        shell: pwsh
        working-directory: go/okapi
        env:
          OKAPI_LIBRARY_PATH: "${{ github.workspace }}/libs"
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          GO111MODULE: on
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          directory: go/okapi
          token: ${{ secrets.CODECOV_TOKEN }}
