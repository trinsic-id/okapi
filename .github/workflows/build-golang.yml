name: Build Golang SDK

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
  push:
    branches:
      - main

jobs:
  build-and-test-golang:
    name: Test Go code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux
          - os: windows-latest
            artifact_name: windows-gnu
          - os: macos-latest
            artifact_name: macos
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Display Golang version
        run: |
          go version
          go install golang.org/x/lint/golint@latest
          go install github.com/jstemmer/go-junit-report@latest
      - name: Build, Test, Pack
        run: |
          ./devops/BuildGolang.ps1 -GitTag ${{ github.ref }} -TestOutput "test_output.xml" -ArtifactName "${{ matrix.artifact_name }}"
        shell: pwsh
        env:
          LD_LIBRARY_PATH: "${{ github.workspace }}/go/okapi"
          DYLD_FALLBACK_LIBRARY_PATH: "${{ github.workspace }}/go/okapi"
          DYLD_LIBRARY_PATH: "${{ github.workspace }}/go/okapi"
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (${{ matrix.os }})
          path: 'go/okapi/test_output*.xml'

  publish-test-results-golang:
    name: Publish Golang Test Results
    needs: build-and-test-golang
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Test Report - Golang
        uses: EnricoMi/publish-unit-test-result-action@v1.23
        with:
          files: 'artifacts/**/*.xml'
          check_name: Golang Test Report
