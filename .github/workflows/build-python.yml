name: Python

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - "python/**"
      - "proto/**"
      - ".github/workflows/*python*"
  push:
    branches:
      - main
    paths:
      - "python/**"
      - "proto/**"
      - ".github/workflows/*python*"

jobs:
  build-and-test-python:
    name: Test Python code
    runs-on: ${{ matrix.os-artifact[0] }}
    strategy:
      fail-fast: false
      matrix:
        os-artifact: [ [ubuntu-latest, linux], [windows-latest, windows], [macos-latest, macos] ]
        python-version: [3.7, 3.8, 3.9, '3.10' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
            
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.17.0
        with:
          workflow: "build-libs.yml"
          path: ./libs/${{ matrix.os-artifact[1] }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ matrix.os-artifact[1] }}
      - name: Build, Test, Pack
        run: |
          python -m pip install --upgrade --upgrade-strategy eager -r requirements.txt
          python -m pip install pytest pytest-cov
          python ../devops/build_sdks.py --language=python
          python -m pytest --cache-clear ./tests --junitxml=test_output.xml --cov=.
        shell: pwsh
        working-directory: python
        env:
          LD_LIBRARY_PATH: "${{ github.workspace }}/libs"
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
      - name: Upload Unit Test Results - Python
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Python ${{ matrix.python-version }} Unit Test Results (${{ matrix.os-artifact[0] }})
          path: 'python/test_output*.xml'

  publish-test-results-python:
    name: Publish Python Test Results
    needs: build-and-test-python
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: python_artifacts
      - name: Publish Test Report - Python
        uses: EnricoMi/publish-unit-test-result-action@v1.23
        with:
          files: 'python_artifacts/**/*.xml'
          check_name: Python Test Report
