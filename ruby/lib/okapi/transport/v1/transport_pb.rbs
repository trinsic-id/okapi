# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: okapi/transport/v1/transport.proto

module Okapi
end
module Okapi::Transport
end
module Okapi::Transport::V1
end

class Okapi::Transport::V1::SignRequest

  def self.decode: (String) -> Okapi::Transport::V1::SignRequest

  def self.encode: (Okapi::Transport::V1::SignRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::SignRequest

  def self.encode_json: (Okapi::Transport::V1::SignRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    payload: String?,
    key: Okapi::Keys::V1::JsonWebKey?,
    append_to: Pbmse::V1::SignedMessage?
  ) -> void


  def payload: () -> String

  def payload=: (String) -> void

  def clear_payload: () -> void

  def has_payload?: () -> bool

  def key: () -> Okapi::Keys::V1::JsonWebKey?

  def key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_key: () -> void

  def has_key?: () -> bool

  def append_to: () -> Pbmse::V1::SignedMessage?

  def append_to=: (Pbmse::V1::SignedMessage?) -> void

  def clear_append_to: () -> void

  def has_append_to?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::SignResponse

  def self.decode: (String) -> Okapi::Transport::V1::SignResponse

  def self.encode: (Okapi::Transport::V1::SignResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::SignResponse

  def self.encode_json: (Okapi::Transport::V1::SignResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    message: Pbmse::V1::SignedMessage?
  ) -> void


  def message: () -> Pbmse::V1::SignedMessage?

  def message=: (Pbmse::V1::SignedMessage?) -> void

  def clear_message: () -> void

  def has_message?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::VerifyRequest

  def self.decode: (String) -> Okapi::Transport::V1::VerifyRequest

  def self.encode: (Okapi::Transport::V1::VerifyRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::VerifyRequest

  def self.encode_json: (Okapi::Transport::V1::VerifyRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    message: Pbmse::V1::SignedMessage?,
    key: Okapi::Keys::V1::JsonWebKey?
  ) -> void


  def message: () -> Pbmse::V1::SignedMessage?

  def message=: (Pbmse::V1::SignedMessage?) -> void

  def clear_message: () -> void

  def has_message?: () -> bool

  def key: () -> Okapi::Keys::V1::JsonWebKey?

  def key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_key: () -> void

  def has_key?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::VerifyResponse

  def self.decode: (String) -> Okapi::Transport::V1::VerifyResponse

  def self.encode: (Okapi::Transport::V1::VerifyResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::VerifyResponse

  def self.encode_json: (Okapi::Transport::V1::VerifyResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    is_valid: bool?
  ) -> void


  def is_valid: () -> bool

  def is_valid=: (bool) -> void

  def clear_is_valid: () -> void

  def has_is_valid?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::PackRequest

  def self.decode: (String) -> Okapi::Transport::V1::PackRequest

  def self.encode: (Okapi::Transport::V1::PackRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::PackRequest

  def self.encode_json: (Okapi::Transport::V1::PackRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    sender_key: Okapi::Keys::V1::JsonWebKey?,
    receiver_key: Okapi::Keys::V1::JsonWebKey?,
    associated_data: String?,
    plaintext: String?,
    mode: (Symbol | String | Integer)?,
    algorithm: (Symbol | String | Integer)?
  ) -> void


  def sender_key: () -> Okapi::Keys::V1::JsonWebKey?

  def sender_key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_sender_key: () -> void

  def has_sender_key?: () -> bool

  def receiver_key: () -> Okapi::Keys::V1::JsonWebKey?

  def receiver_key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_receiver_key: () -> void

  def has_receiver_key?: () -> bool

  def associated_data: () -> String

  def associated_data=: (String) -> void

  def clear_associated_data: () -> void

  def has_associated_data?: () -> bool

  def plaintext: () -> String

  def plaintext=: (String) -> void

  def clear_plaintext: () -> void

  def has_plaintext?: () -> bool

  def mode: () -> Symbol

  def mode=: ((Symbol | String | Integer)) -> void

  def clear_mode: () -> void

  def has_mode?: () -> bool

  def algorithm: () -> Symbol

  def algorithm=: ((Symbol | String | Integer)) -> void

  def clear_algorithm: () -> void

  def has_algorithm?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::PackResponse

  def self.decode: (String) -> Okapi::Transport::V1::PackResponse

  def self.encode: (Okapi::Transport::V1::PackResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::PackResponse

  def self.encode_json: (Okapi::Transport::V1::PackResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    message: Pbmse::V1::EncryptedMessage?
  ) -> void


  def message: () -> Pbmse::V1::EncryptedMessage?

  def message=: (Pbmse::V1::EncryptedMessage?) -> void

  def clear_message: () -> void

  def has_message?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::UnpackRequest

  def self.decode: (String) -> Okapi::Transport::V1::UnpackRequest

  def self.encode: (Okapi::Transport::V1::UnpackRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::UnpackRequest

  def self.encode_json: (Okapi::Transport::V1::UnpackRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    sender_key: Okapi::Keys::V1::JsonWebKey?,
    receiver_key: Okapi::Keys::V1::JsonWebKey?,
    message: Pbmse::V1::EncryptedMessage?
  ) -> void


  def sender_key: () -> Okapi::Keys::V1::JsonWebKey?

  def sender_key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_sender_key: () -> void

  def has_sender_key?: () -> bool

  def receiver_key: () -> Okapi::Keys::V1::JsonWebKey?

  def receiver_key=: (Okapi::Keys::V1::JsonWebKey?) -> void

  def clear_receiver_key: () -> void

  def has_receiver_key?: () -> bool

  def message: () -> Pbmse::V1::EncryptedMessage?

  def message=: (Pbmse::V1::EncryptedMessage?) -> void

  def clear_message: () -> void

  def has_message?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::UnpackResponse

  def self.decode: (String) -> Okapi::Transport::V1::UnpackResponse

  def self.encode: (Okapi::Transport::V1::UnpackResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::UnpackResponse

  def self.encode_json: (Okapi::Transport::V1::UnpackResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    plaintext: String?
  ) -> void


  def plaintext: () -> String

  def plaintext=: (String) -> void

  def clear_plaintext: () -> void

  def has_plaintext?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Transport::V1::CoreMessage

  def self.decode: (String) -> Okapi::Transport::V1::CoreMessage

  def self.encode: (Okapi::Transport::V1::CoreMessage) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Transport::V1::CoreMessage

  def self.encode_json: (Okapi::Transport::V1::CoreMessage, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    id: String?,
    type: String?,
    body: String?,
    to: Array[String]?,
    from: String?,
    created: Integer?,
    expires: Integer?
  ) -> void


  def id: () -> String

  def id=: (String) -> void

  def clear_id: () -> void

  def has_id?: () -> bool

  def type: () -> String

  def type=: (String) -> void

  def clear_type: () -> void

  def has_type?: () -> bool

  def body: () -> String

  def body=: (String) -> void

  def clear_body: () -> void

  def has_body?: () -> bool

  def to: () -> Array[String]

  def to=: (Google::Protobuf::RepeatedField) -> void

  def clear_to: () -> void

  def has_to?: () -> bool

  def from: () -> String

  def from=: (String) -> void

  def clear_from: () -> void

  def has_from?: () -> bool

  def created: () -> Integer

  def created=: (Integer) -> void

  def clear_created: () -> void

  def has_created?: () -> bool

  def expires: () -> Integer

  def expires=: (Integer) -> void

  def clear_expires: () -> void

  def has_expires?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end
