# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: okapi/keys/v1/keys.proto

module Okapi
end
module Okapi::Keys
end
module Okapi::Keys::V1
end

class Okapi::Keys::V1::GenerateKeyRequest

  def self.decode: (String) -> Okapi::Keys::V1::GenerateKeyRequest

  def self.encode: (Okapi::Keys::V1::GenerateKeyRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Keys::V1::GenerateKeyRequest

  def self.encode_json: (Okapi::Keys::V1::GenerateKeyRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    seed: String?,
    key_type: (Symbol | String | Integer)?
  ) -> void


  def seed: () -> String

  def seed=: (String) -> void

  def clear_seed: () -> void

  def has_seed?: () -> bool

  def key_type: () -> Symbol

  def key_type=: ((Symbol | String | Integer)) -> void

  def clear_key_type: () -> void

  def has_key_type?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Keys::V1::GenerateKeyResponse

  def self.decode: (String) -> Okapi::Keys::V1::GenerateKeyResponse

  def self.encode: (Okapi::Keys::V1::GenerateKeyResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Keys::V1::GenerateKeyResponse

  def self.encode_json: (Okapi::Keys::V1::GenerateKeyResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    key: Array[Okapi::Keys::V1::JsonWebKey?]?,
    did_document: Google::Protobuf::Struct?
  ) -> void


  def key: () -> Array[Okapi::Keys::V1::JsonWebKey?]

  def key=: (Google::Protobuf::RepeatedField) -> void

  def clear_key: () -> void

  def has_key?: () -> bool

  def did_document: () -> Google::Protobuf::Struct?

  def did_document=: (Google::Protobuf::Struct?) -> void

  def clear_did_document: () -> void

  def has_did_document?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Keys::V1::ResolveRequest

  def self.decode: (String) -> Okapi::Keys::V1::ResolveRequest

  def self.encode: (Okapi::Keys::V1::ResolveRequest) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Keys::V1::ResolveRequest

  def self.encode_json: (Okapi::Keys::V1::ResolveRequest, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    did: String?
  ) -> void


  def did: () -> String

  def did=: (String) -> void

  def clear_did: () -> void

  def has_did?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Keys::V1::ResolveResponse

  def self.decode: (String) -> Okapi::Keys::V1::ResolveResponse

  def self.encode: (Okapi::Keys::V1::ResolveResponse) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Keys::V1::ResolveResponse

  def self.encode_json: (Okapi::Keys::V1::ResolveResponse, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    did_document: Google::Protobuf::Struct?,
    keys: Array[Okapi::Keys::V1::JsonWebKey?]?
  ) -> void


  def did_document: () -> Google::Protobuf::Struct?

  def did_document=: (Google::Protobuf::Struct?) -> void

  def clear_did_document: () -> void

  def has_did_document?: () -> bool

  def keys: () -> Array[Okapi::Keys::V1::JsonWebKey?]

  def keys=: (Google::Protobuf::RepeatedField) -> void

  def clear_keys: () -> void

  def has_keys?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Okapi::Keys::V1::JsonWebKey

  def self.decode: (String) -> Okapi::Keys::V1::JsonWebKey

  def self.encode: (Okapi::Keys::V1::JsonWebKey) -> String

  def self.decode_json: (String, untyped kw) -> Okapi::Keys::V1::JsonWebKey

  def self.encode_json: (Okapi::Keys::V1::JsonWebKey, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    kid: String?,
    x: String?,
    y: String?,
    d: String?,
    crv: String?,
    kty: String?
  ) -> void


  def kid: () -> String

  def kid=: (String) -> void

  def clear_kid: () -> void

  def has_kid?: () -> bool

  def x: () -> String

  def x=: (String) -> void

  def clear_x: () -> void

  def has_x?: () -> bool

  def y: () -> String

  def y=: (String) -> void

  def clear_y: () -> void

  def has_y?: () -> bool

  def d: () -> String

  def d=: (String) -> void

  def clear_d: () -> void

  def has_d?: () -> bool

  def crv: () -> String

  def crv=: (String) -> void

  def clear_crv: () -> void

  def has_crv?: () -> bool

  def kty: () -> String

  def kty=: (String) -> void

  def clear_kty: () -> void

  def has_kty?: () -> bool

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

module Okapi::Keys::V1::KeyType
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_UNSPECIFIED = T.let(0, Integer)
  def KEY_TYPE_UNSPECIFIED: () -> Integer # = 0
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_ED25519 = T.let(1, Integer)
  def KEY_TYPE_ED25519: () -> Integer # = 1
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_X25519 = T.let(2, Integer)
  def KEY_TYPE_X25519: () -> Integer # = 2
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_P256 = T.let(3, Integer)
  def KEY_TYPE_P256: () -> Integer # = 3
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_BLS12381G1G2 = T.let(4, Integer)
  def KEY_TYPE_BLS12381G1G2: () -> Integer # = 4
  # TODO - Not sure how to represent this
  # self::KEY_TYPE_SECP256K1 = T.let(5, Integer)
  def KEY_TYPE_SECP256K1: () -> Integer # = 5

  def self.lookup: (value: Integer) -> Symbol?

  def self.resolve: (value: Symbol) -> Integer?

  def self.descriptor: () -> ::Google::Protobuf::EnumDescriptor
end
