# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: okapi/security/v1/security.proto
# typed: strict

class Okapi::Security::V1::CreateOberonKeyRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      seed: T.nilable(String)
    ).void
  end
  def initialize(
    seed: ""
  )
  end

  sig { returns(String) }
  def seed
  end

  sig { params(value: String).void }
  def seed=(value)
  end

  sig { void }
  def clear_seed
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::CreateOberonKeyResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      sk: T.nilable(String),
      pk: T.nilable(String)
    ).void
  end
  def initialize(
    sk: "",
    pk: ""
  )
  end

  sig { returns(String) }
  def sk
  end

  sig { params(value: String).void }
  def sk=(value)
  end

  sig { void }
  def clear_sk
  end

  sig { returns(String) }
  def pk
  end

  sig { params(value: String).void }
  def pk=(value)
  end

  sig { void }
  def clear_pk
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::CreateOberonTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      sk: T.nilable(String),
      data: T.nilable(String),
      blinding: T.nilable(T::Array[String])
    ).void
  end
  def initialize(
    sk: "",
    data: "",
    blinding: []
  )
  end

  sig { returns(String) }
  def sk
  end

  sig { params(value: String).void }
  def sk=(value)
  end

  sig { void }
  def clear_sk
  end

  sig { returns(String) }
  def data
  end

  sig { params(value: String).void }
  def data=(value)
  end

  sig { void }
  def clear_data
  end

  sig { returns(T::Array[String]) }
  def blinding
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def blinding=(value)
  end

  sig { void }
  def clear_blinding
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::CreateOberonTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String)
    ).void
  end
  def initialize(
    token: ""
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::CreateOberonProofRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonProofRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonProofRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonProofRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonProofRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      data: T.nilable(String),
      token: T.nilable(String),
      blinding: T.nilable(T::Array[String]),
      nonce: T.nilable(String)
    ).void
  end
  def initialize(
    data: "",
    token: "",
    blinding: [],
    nonce: ""
  )
  end

  sig { returns(String) }
  def data
  end

  sig { params(value: String).void }
  def data=(value)
  end

  sig { void }
  def clear_data
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { returns(T::Array[String]) }
  def blinding
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def blinding=(value)
  end

  sig { void }
  def clear_blinding
  end

  sig { returns(String) }
  def nonce
  end

  sig { params(value: String).void }
  def nonce=(value)
  end

  sig { void }
  def clear_nonce
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::CreateOberonProofResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::CreateOberonProofResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonProofResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::CreateOberonProofResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::CreateOberonProofResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      proof: T.nilable(String)
    ).void
  end
  def initialize(
    proof: ""
  )
  end

  sig { returns(String) }
  def proof
  end

  sig { params(value: String).void }
  def proof=(value)
  end

  sig { void }
  def clear_proof
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::VerifyOberonProofRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::VerifyOberonProofRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonProofRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::VerifyOberonProofRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonProofRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      proof: T.nilable(String),
      data: T.nilable(String),
      nonce: T.nilable(String),
      pk: T.nilable(String)
    ).void
  end
  def initialize(
    proof: "",
    data: "",
    nonce: "",
    pk: ""
  )
  end

  sig { returns(String) }
  def proof
  end

  sig { params(value: String).void }
  def proof=(value)
  end

  sig { void }
  def clear_proof
  end

  sig { returns(String) }
  def data
  end

  sig { params(value: String).void }
  def data=(value)
  end

  sig { void }
  def clear_data
  end

  sig { returns(String) }
  def nonce
  end

  sig { params(value: String).void }
  def nonce=(value)
  end

  sig { void }
  def clear_nonce
  end

  sig { returns(String) }
  def pk
  end

  sig { params(value: String).void }
  def pk=(value)
  end

  sig { void }
  def clear_pk
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::VerifyOberonProofResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::VerifyOberonProofResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonProofResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::VerifyOberonProofResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonProofResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      valid: T.nilable(T::Boolean)
    ).void
  end
  def initialize(
    valid: false
  )
  end

  sig { returns(T::Boolean) }
  def valid
  end

  sig { params(value: T::Boolean).void }
  def valid=(value)
  end

  sig { void }
  def clear_valid
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::BlindOberonTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::BlindOberonTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::BlindOberonTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::BlindOberonTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::BlindOberonTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String),
      blinding: T.nilable(T::Array[String])
    ).void
  end
  def initialize(
    token: "",
    blinding: []
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { returns(T::Array[String]) }
  def blinding
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def blinding=(value)
  end

  sig { void }
  def clear_blinding
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::BlindOberonTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::BlindOberonTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::BlindOberonTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::BlindOberonTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::BlindOberonTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String)
    ).void
  end
  def initialize(
    token: ""
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::UnBlindOberonTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::UnBlindOberonTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::UnBlindOberonTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::UnBlindOberonTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::UnBlindOberonTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String),
      blinding: T.nilable(T::Array[String])
    ).void
  end
  def initialize(
    token: "",
    blinding: []
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { returns(T::Array[String]) }
  def blinding
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def blinding=(value)
  end

  sig { void }
  def clear_blinding
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::UnBlindOberonTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::UnBlindOberonTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::UnBlindOberonTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::UnBlindOberonTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::UnBlindOberonTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String)
    ).void
  end
  def initialize(
    token: ""
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::VerifyOberonTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::VerifyOberonTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::VerifyOberonTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String),
      pk: T.nilable(String),
      data: T.nilable(String)
    ).void
  end
  def initialize(
    token: "",
    pk: "",
    data: ""
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { returns(String) }
  def pk
  end

  sig { params(value: String).void }
  def pk=(value)
  end

  sig { void }
  def clear_pk
  end

  sig { returns(String) }
  def data
  end

  sig { params(value: String).void }
  def data=(value)
  end

  sig { void }
  def clear_data
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Security::V1::VerifyOberonTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Security::V1::VerifyOberonTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Security::V1::VerifyOberonTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Security::V1::VerifyOberonTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      valid: T.nilable(T::Boolean)
    ).void
  end
  def initialize(
    valid: false
  )
  end

  sig { returns(T::Boolean) }
  def valid
  end

  sig { params(value: T::Boolean).void }
  def valid=(value)
  end

  sig { void }
  def clear_valid
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
