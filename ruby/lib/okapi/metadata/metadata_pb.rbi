# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: okapi/metadata/metadata.proto
# typed: strict

module Okapi; end
module Okapi::Metadata; end

class Okapi::Metadata::MetadataRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Metadata::MetadataRequest) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Metadata::MetadataRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Metadata::MetadataRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Metadata::MetadataRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Okapi::Metadata::MetadataResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Okapi::Metadata::MetadataResponse) }
  def self.decode(str)
  end

  sig { params(msg: Okapi::Metadata::MetadataResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Okapi::Metadata::MetadataResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Okapi::Metadata::MetadataResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      version: T.nilable(String),
      version_major: T.nilable(Integer),
      version_minor: T.nilable(Integer),
      version_patch: T.nilable(Integer),
      target_family: T.nilable(String),
      target_os: T.nilable(String),
      target_arch: T.nilable(String),
      target_vendor: T.nilable(String),
      target_env: T.nilable(String)
    ).void
  end
  def initialize(
    version: "",
    version_major: 0,
    version_minor: 0,
    version_patch: 0,
    target_family: "",
    target_os: "",
    target_arch: "",
    target_vendor: "",
    target_env: ""
  )
  end

  sig { returns(String) }
  def version
  end

  sig { params(value: String).void }
  def version=(value)
  end

  sig { void }
  def clear_version
  end

  sig { returns(Integer) }
  def version_major
  end

  sig { params(value: Integer).void }
  def version_major=(value)
  end

  sig { void }
  def clear_version_major
  end

  sig { returns(Integer) }
  def version_minor
  end

  sig { params(value: Integer).void }
  def version_minor=(value)
  end

  sig { void }
  def clear_version_minor
  end

  sig { returns(Integer) }
  def version_patch
  end

  sig { params(value: Integer).void }
  def version_patch=(value)
  end

  sig { void }
  def clear_version_patch
  end

  sig { returns(String) }
  def target_family
  end

  sig { params(value: String).void }
  def target_family=(value)
  end

  sig { void }
  def clear_target_family
  end

  sig { returns(String) }
  def target_os
  end

  sig { params(value: String).void }
  def target_os=(value)
  end

  sig { void }
  def clear_target_os
  end

  sig { returns(String) }
  def target_arch
  end

  sig { params(value: String).void }
  def target_arch=(value)
  end

  sig { void }
  def clear_target_arch
  end

  sig { returns(String) }
  def target_vendor
  end

  sig { params(value: String).void }
  def target_vendor=(value)
  end

  sig { void }
  def clear_target_vendor
  end

  sig { returns(String) }
  def target_env
  end

  sig { params(value: String).void }
  def target_env=(value)
  end

  sig { void }
  def clear_target_env
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
