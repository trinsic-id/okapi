// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: okapi/transport/v1/transport.proto

package trinsic.okapi.transport.v1

@kotlin.jvm.JvmName("-initializecoreMessage")
public inline fun coreMessage(
    block: trinsic.okapi.transport.v1.CoreMessageKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.transport.v1.Transport.CoreMessage =
    trinsic.okapi.transport.v1.CoreMessageKt.Dsl._create(
            trinsic.okapi.transport.v1.Transport.CoreMessage.newBuilder())
        .apply { block() }
        ._build()

public object CoreMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl
  private constructor(
      private val _builder: trinsic.okapi.transport.v1.Transport.CoreMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trinsic.okapi.transport.v1.Transport.CoreMessage.Builder): Dsl =
          Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.transport.v1.Transport.CoreMessage = _builder.build()

    /** <code>string id = 1;</code> */
    public var id: kotlin.String
      @JvmName("getId") get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /** <code>string id = 1;</code> */
    public fun clearId() {
      _builder.clearId()
    }

    /** <code>string type = 2;</code> */
    public var type: kotlin.String
      @JvmName("getType") get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /** <code>string type = 2;</code> */
    public fun clearType() {
      _builder.clearType()
    }

    /** <code>bytes body = 3;</code> */
    public var body: com.google.protobuf.ByteString
      @JvmName("getBody") get() = _builder.getBody()
      @JvmName("setBody")
      set(value) {
        _builder.setBody(value)
      }
    /** <code>bytes body = 3;</code> */
    public fun clearBody() {
      _builder.clearBody()
    }

    /** An uninstantiable, behaviorless type to represent the field in generics. */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ToProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string to = 4;</code>
     * @return A list containing the to.
     */
    public val to: com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>
      @kotlin.jvm.JvmSynthetic get() = com.google.protobuf.kotlin.DslList(_builder.getToList())
    /**
     * <code>repeated string to = 4;</code>
     * @param value The to to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTo")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>.add(
        value: kotlin.String
    ) {
      _builder.addTo(value)
    }
    /**
     * <code>repeated string to = 4;</code>
     * @param value The to to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTo")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>
        .plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string to = 4;</code>
     * @param values The to to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTo")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>.addAll(
        values: kotlin.collections.Iterable<kotlin.String>
    ) {
      _builder.addAllTo(values)
    }
    /**
     * <code>repeated string to = 4;</code>
     * @param values The to to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTo")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>
        .plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string to = 4;</code>
     * @param index The index to set the value at.
     * @param value The to to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTo")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>.set(
        index: kotlin.Int,
        value: kotlin.String
    ) {
      _builder.setTo(index, value)
    }
    /** <code>repeated string to = 4;</code> */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTo")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ToProxy>.clear() {
      _builder.clearTo()
    }
    /** <code>string from = 5;</code> */
    public var from: kotlin.String
      @JvmName("getFrom") get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /** <code>string from = 5;</code> */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /** <code>int64 created = 6 [json_name = "created_time"];</code> */
    public var created: kotlin.Long
      @JvmName("getCreated") get() = _builder.getCreated()
      @JvmName("setCreated")
      set(value) {
        _builder.setCreated(value)
      }
    /** <code>int64 created = 6 [json_name = "created_time"];</code> */
    public fun clearCreated() {
      _builder.clearCreated()
    }

    /** <code>int64 expires = 7 [json_name = "expires_time"];</code> */
    public var expires: kotlin.Long
      @JvmName("getExpires") get() = _builder.getExpires()
      @JvmName("setExpires")
      set(value) {
        _builder.setExpires(value)
      }
    /** <code>int64 expires = 7 [json_name = "expires_time"];</code> */
    public fun clearExpires() {
      _builder.clearExpires()
    }
  }
}

@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.transport.v1.Transport.CoreMessage.copy(
    block: trinsic.okapi.transport.v1.CoreMessageKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.transport.v1.Transport.CoreMessage =
    trinsic.okapi.transport.v1.CoreMessageKt.Dsl._create(this.toBuilder())
        .apply { block() }
        ._build()
