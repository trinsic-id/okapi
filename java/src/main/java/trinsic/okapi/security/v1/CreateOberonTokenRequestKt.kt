// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: okapi/security/v1/security.proto

package trinsic.okapi.security.v1

@kotlin.jvm.JvmName("-initializecreateOberonTokenRequest")
public inline fun createOberonTokenRequest(
    block: trinsic.okapi.security.v1.CreateOberonTokenRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.security.v1.Security.CreateOberonTokenRequest =
    trinsic.okapi.security.v1.CreateOberonTokenRequestKt.Dsl._create(
            trinsic.okapi.security.v1.Security.CreateOberonTokenRequest.newBuilder())
        .apply { block() }
        ._build()

public object CreateOberonTokenRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl
  private constructor(
      private val _builder: trinsic.okapi.security.v1.Security.CreateOberonTokenRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(
          builder: trinsic.okapi.security.v1.Security.CreateOberonTokenRequest.Builder
      ): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.security.v1.Security.CreateOberonTokenRequest =
        _builder.build()

    /**
     * <pre> raw BLS key bytes </pre>
     *
     * <code>bytes sk = 1;</code>
     */
    public var sk: com.google.protobuf.ByteString
      @JvmName("getSk") get() = _builder.getSk()
      @JvmName("setSk")
      set(value) {
        _builder.setSk(value)
      }
    /**
     * <pre> raw BLS key bytes </pre>
     *
     * <code>bytes sk = 1;</code>
     */
    public fun clearSk() {
      _builder.clearSk()
    }

    /**
     * <pre> data is the public part of the oberon protocol and can be any data </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData") get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre> data is the public part of the oberon protocol and can be any data </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }

    /** An uninstantiable, behaviorless type to represent the field in generics. */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BlindingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     */
    public val blinding:
        com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BlindingProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(_builder.getBlindingList())
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     * @param value The blinding to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBlinding")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BlindingProxy>
        .add(value: com.google.protobuf.ByteString) {
      _builder.addBlinding(value)
    }
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     * @param value The blinding to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBlinding")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<
        com.google.protobuf.ByteString, BlindingProxy>
        .plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     * @param values The blinding to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBlinding")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BlindingProxy>
        .addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllBlinding(values)
    }
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     * @param values The blinding to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBlinding")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<
        com.google.protobuf.ByteString, BlindingProxy>
        .plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     * @param index The index to set the value at.
     * @param value The blinding to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBlinding")
    public operator fun com.google.protobuf.kotlin.DslList<
        com.google.protobuf.ByteString, BlindingProxy>
        .set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setBlinding(index, value)
    }
    /**
     * <pre> optional blinding for the token </pre>
     *
     * <code>repeated bytes blinding = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBlinding")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BlindingProxy>
        .clear() {
      _builder.clearBlinding()
    }
  }
}

@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.security.v1.Security.CreateOberonTokenRequest.copy(
    block: trinsic.okapi.security.v1.CreateOberonTokenRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.security.v1.Security.CreateOberonTokenRequest =
    trinsic.okapi.security.v1.CreateOberonTokenRequestKt.Dsl._create(this.toBuilder())
        .apply { block() }
        ._build()
