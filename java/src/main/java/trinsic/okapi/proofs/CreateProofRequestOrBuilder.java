// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proofs.proto

package trinsic.okapi.proofs;

public interface CreateProofRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:okapi.proofs.CreateProofRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The input JSON document that will be used
   * to create the LD Proof. This document must
   * also contain a "proof" object, with the desired
   * values filled in.
   * </pre>
   *
   * <code>.google.protobuf.Struct document = 1;</code>
   * @return Whether the document field is set.
   */
  boolean hasDocument();
  /**
   * <pre>
   * The input JSON document that will be used
   * to create the LD Proof. This document must
   * also contain a "proof" object, with the desired
   * values filled in.
   * </pre>
   *
   * <code>.google.protobuf.Struct document = 1;</code>
   * @return The document.
   */
  com.google.protobuf.Struct getDocument();
  /**
   * <pre>
   * The input JSON document that will be used
   * to create the LD Proof. This document must
   * also contain a "proof" object, with the desired
   * values filled in.
   * </pre>
   *
   * <code>.google.protobuf.Struct document = 1;</code>
   */
  com.google.protobuf.StructOrBuilder getDocumentOrBuilder();

  /**
   * <pre>
   * The signer of the proof. This field must include
   * the 'kid' in full URI format.
   * Example:
   *  did:example:alice#key-1
   * </pre>
   *
   * <code>.okapi.keys.JsonWebKey key = 3;</code>
   * @return Whether the key field is set.
   */
  boolean hasKey();
  /**
   * <pre>
   * The signer of the proof. This field must include
   * the 'kid' in full URI format.
   * Example:
   *  did:example:alice#key-1
   * </pre>
   *
   * <code>.okapi.keys.JsonWebKey key = 3;</code>
   * @return The key.
   */
  trinsic.okapi.keys.JsonWebKey getKey();
  /**
   * <pre>
   * The signer of the proof. This field must include
   * the 'kid' in full URI format.
   * Example:
   *  did:example:alice#key-1
   * </pre>
   *
   * <code>.okapi.keys.JsonWebKey key = 3;</code>
   */
  trinsic.okapi.keys.JsonWebKeyOrBuilder getKeyOrBuilder();

  /**
   * <pre>
   * The LD Suite to use to produce this proof
   * </pre>
   *
   * <code>.okapi.proofs.LdSuite suite = 4;</code>
   * @return The enum numeric value on the wire for suite.
   */
  int getSuiteValue();
  /**
   * <pre>
   * The LD Suite to use to produce this proof
   * </pre>
   *
   * <code>.okapi.proofs.LdSuite suite = 4;</code>
   * @return The suite.
   */
  trinsic.okapi.proofs.LdSuite getSuite();
}
