//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: okapi/proofs/v1/proofs.proto

package trinsic.okapi.proofs.v1;

@kotlin.jvm.JvmName("-initializecreateProofRequest")
public inline fun createProofRequest(block: trinsic.okapi.proofs.v1.CreateProofRequestKt.Dsl.() -> kotlin.Unit): trinsic.okapi.proofs.v1.Proofs.CreateProofRequest =
  trinsic.okapi.proofs.v1.CreateProofRequestKt.Dsl._create(trinsic.okapi.proofs.v1.Proofs.CreateProofRequest.newBuilder()).apply { block() }._build()
public object CreateProofRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: trinsic.okapi.proofs.v1.Proofs.CreateProofRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trinsic.okapi.proofs.v1.Proofs.CreateProofRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.proofs.v1.Proofs.CreateProofRequest = _builder.build()

    /**
     * <pre>
     * The input JSON document that will be used
     * to create the LD Proof. This document must
     * also contain a "proof" object, with the desired
     * values filled in.
     * </pre>
     *
     * <code>.google.protobuf.Struct document = 1;</code>
     */
    public var document: com.google.protobuf.Struct
      @JvmName("getDocument")
      get() = _builder.getDocument()
      @JvmName("setDocument")
      set(value) {
        _builder.setDocument(value)
      }
    /**
     * <pre>
     * The input JSON document that will be used
     * to create the LD Proof. This document must
     * also contain a "proof" object, with the desired
     * values filled in.
     * </pre>
     *
     * <code>.google.protobuf.Struct document = 1;</code>
     */
    public fun clearDocument() {
      _builder.clearDocument()
    }
    /**
     * <pre>
     * The input JSON document that will be used
     * to create the LD Proof. This document must
     * also contain a "proof" object, with the desired
     * values filled in.
     * </pre>
     *
     * <code>.google.protobuf.Struct document = 1;</code>
     * @return Whether the document field is set.
     */
    public fun hasDocument(): kotlin.Boolean {
      return _builder.hasDocument()
    }

    /**
     * <pre>
     * The signer of the proof. This field must include
     * the 'kid' in full URI format.
     * Example:
     *  did:example:alice#key-1
     * </pre>
     *
     * <code>.okapi.keys.v1.JsonWebKey key = 3;</code>
     */
    public var key: trinsic.okapi.keys.v1.Keys.JsonWebKey
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <pre>
     * The signer of the proof. This field must include
     * the 'kid' in full URI format.
     * Example:
     *  did:example:alice#key-1
     * </pre>
     *
     * <code>.okapi.keys.v1.JsonWebKey key = 3;</code>
     */
    public fun clearKey() {
      _builder.clearKey()
    }
    /**
     * <pre>
     * The signer of the proof. This field must include
     * the 'kid' in full URI format.
     * Example:
     *  did:example:alice#key-1
     * </pre>
     *
     * <code>.okapi.keys.v1.JsonWebKey key = 3;</code>
     * @return Whether the key field is set.
     */
    public fun hasKey(): kotlin.Boolean {
      return _builder.hasKey()
    }

    /**
     * <pre>
     * The LD Suite to use to produce this proof
     * </pre>
     *
     * <code>.okapi.proofs.v1.LdSuite suite = 4;</code>
     */
    public var suite: trinsic.okapi.proofs.v1.Proofs.LdSuite
      @JvmName("getSuite")
      get() = _builder.getSuite()
      @JvmName("setSuite")
      set(value) {
        _builder.setSuite(value)
      }
    /**
     * <pre>
     * The LD Suite to use to produce this proof
     * </pre>
     *
     * <code>.okapi.proofs.v1.LdSuite suite = 4;</code>
     */
    public fun clearSuite() {
      _builder.clearSuite()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.proofs.v1.Proofs.CreateProofRequest.copy(block: trinsic.okapi.proofs.v1.CreateProofRequestKt.Dsl.() -> kotlin.Unit): trinsic.okapi.proofs.v1.Proofs.CreateProofRequest =
  trinsic.okapi.proofs.v1.CreateProofRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val trinsic.okapi.proofs.v1.Proofs.CreateProofRequestOrBuilder.documentOrNull: com.google.protobuf.Struct?
  get() = if (hasDocument()) getDocument() else null

val trinsic.okapi.proofs.v1.Proofs.CreateProofRequestOrBuilder.keyOrNull: trinsic.okapi.keys.v1.Keys.JsonWebKey?
  get() = if (hasKey()) getKey() else null

