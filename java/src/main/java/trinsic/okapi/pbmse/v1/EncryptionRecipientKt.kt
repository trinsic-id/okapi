// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: pbmse/v1/pbmse.proto

package trinsic.okapi.pbmse.v1

@kotlin.jvm.JvmName("-initializeencryptionRecipient")
public inline fun encryptionRecipient(
    block: trinsic.okapi.pbmse.v1.EncryptionRecipientKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient =
    trinsic.okapi.pbmse.v1.EncryptionRecipientKt.Dsl._create(
            trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient.newBuilder())
        .apply { block() }
        ._build()

public object EncryptionRecipientKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl
  private constructor(
      private val _builder: trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient.Builder): Dsl =
          Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient = _builder.build()

    /** <code>.pbmse.v1.EncryptionHeader header = 1 [json_name = "unprotected"];</code> */
    public var header: trinsic.okapi.pbmse.v1.Pbmse.EncryptionHeader
      @JvmName("getHeader") get() = _builder.getHeader()
      @JvmName("setHeader")
      set(value) {
        _builder.setHeader(value)
      }
    /** <code>.pbmse.v1.EncryptionHeader header = 1 [json_name = "unprotected"];</code> */
    public fun clearHeader() {
      _builder.clearHeader()
    }
    /**
     * <code>.pbmse.v1.EncryptionHeader header = 1 [json_name = "unprotected"];</code>
     * @return Whether the header field is set.
     */
    public fun hasHeader(): kotlin.Boolean {
      return _builder.hasHeader()
    }

    /** <code>bytes content_encryption_key = 2 [json_name = "cek"];</code> */
    public var contentEncryptionKey: com.google.protobuf.ByteString
      @JvmName("getContentEncryptionKey") get() = _builder.getContentEncryptionKey()
      @JvmName("setContentEncryptionKey")
      set(value) {
        _builder.setContentEncryptionKey(value)
      }
    /** <code>bytes content_encryption_key = 2 [json_name = "cek"];</code> */
    public fun clearContentEncryptionKey() {
      _builder.clearContentEncryptionKey()
    }
  }
}

@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient.copy(
    block: trinsic.okapi.pbmse.v1.EncryptionRecipientKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipient =
    trinsic.okapi.pbmse.v1.EncryptionRecipientKt.Dsl._create(this.toBuilder())
        .apply { block() }
        ._build()

val trinsic.okapi.pbmse.v1.Pbmse.EncryptionRecipientOrBuilder.headerOrNull:
    trinsic.okapi.pbmse.v1.Pbmse.EncryptionHeader?
  get() = if (hasHeader()) getHeader() else null
