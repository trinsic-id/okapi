// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: okapi/keys/v1/keys.proto

package trinsic.okapi.keys.v1

@kotlin.jvm.JvmName("-initializegenerateKeyRequest")
public inline fun generateKeyRequest(
    block: trinsic.okapi.keys.v1.GenerateKeyRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.keys.v1.Keys.GenerateKeyRequest =
    trinsic.okapi.keys.v1.GenerateKeyRequestKt.Dsl._create(
            trinsic.okapi.keys.v1.Keys.GenerateKeyRequest.newBuilder())
        .apply { block() }
        ._build()

public object GenerateKeyRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl
  private constructor(private val _builder: trinsic.okapi.keys.v1.Keys.GenerateKeyRequest.Builder) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trinsic.okapi.keys.v1.Keys.GenerateKeyRequest.Builder): Dsl =
          Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.keys.v1.Keys.GenerateKeyRequest = _builder.build()

    /** <code>bytes seed = 1;</code> */
    public var seed: com.google.protobuf.ByteString
      @JvmName("getSeed") get() = _builder.getSeed()
      @JvmName("setSeed")
      set(value) {
        _builder.setSeed(value)
      }
    /** <code>bytes seed = 1;</code> */
    public fun clearSeed() {
      _builder.clearSeed()
    }

    /** <code>.okapi.keys.v1.KeyType key_type = 2;</code> */
    public var keyType: trinsic.okapi.keys.v1.Keys.KeyType
      @JvmName("getKeyType") get() = _builder.getKeyType()
      @JvmName("setKeyType")
      set(value) {
        _builder.setKeyType(value)
      }
    /** <code>.okapi.keys.v1.KeyType key_type = 2;</code> */
    public fun clearKeyType() {
      _builder.clearKeyType()
    }

    /** <code>.okapi.keys.v1.DocumentKeyFormat key_format = 3;</code> */
    public var keyFormat: trinsic.okapi.keys.v1.Keys.DocumentKeyFormat
      @JvmName("getKeyFormat") get() = _builder.getKeyFormat()
      @JvmName("setKeyFormat")
      set(value) {
        _builder.setKeyFormat(value)
      }
    /** <code>.okapi.keys.v1.DocumentKeyFormat key_format = 3;</code> */
    public fun clearKeyFormat() {
      _builder.clearKeyFormat()
    }
  }
}

@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.keys.v1.Keys.GenerateKeyRequest.copy(
    block: trinsic.okapi.keys.v1.GenerateKeyRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.keys.v1.Keys.GenerateKeyRequest =
    trinsic.okapi.keys.v1.GenerateKeyRequestKt.Dsl._create(this.toBuilder())
        .apply { block() }
        ._build()
