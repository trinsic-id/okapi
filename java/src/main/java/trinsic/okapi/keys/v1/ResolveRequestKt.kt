// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: okapi/keys/v1/keys.proto

package trinsic.okapi.keys.v1

@kotlin.jvm.JvmName("-initializeresolveRequest")
public inline fun resolveRequest(
    block: trinsic.okapi.keys.v1.ResolveRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.keys.v1.Keys.ResolveRequest =
    trinsic.okapi.keys.v1.ResolveRequestKt.Dsl._create(
            trinsic.okapi.keys.v1.Keys.ResolveRequest.newBuilder())
        .apply { block() }
        ._build()

public object ResolveRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl
  private constructor(private val _builder: trinsic.okapi.keys.v1.Keys.ResolveRequest.Builder) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trinsic.okapi.keys.v1.Keys.ResolveRequest.Builder): Dsl =
          Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trinsic.okapi.keys.v1.Keys.ResolveRequest = _builder.build()

    /** <code>string did = 1;</code> */
    public var did: kotlin.String
      @JvmName("getDid") get() = _builder.getDid()
      @JvmName("setDid")
      set(value) {
        _builder.setDid(value)
      }
    /** <code>string did = 1;</code> */
    public fun clearDid() {
      _builder.clearDid()
    }
  }
}

@kotlin.jvm.JvmSynthetic
public inline fun trinsic.okapi.keys.v1.Keys.ResolveRequest.copy(
    block: trinsic.okapi.keys.v1.ResolveRequestKt.Dsl.() -> kotlin.Unit
): trinsic.okapi.keys.v1.Keys.ResolveRequest =
    trinsic.okapi.keys.v1.ResolveRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
